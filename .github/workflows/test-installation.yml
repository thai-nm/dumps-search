name: Test Installation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-installation:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install pango weasyprint

          sudo ln -s /opt/homebrew/opt/glib/lib/libgobject-2.0.0.dylib /usr/local/lib/gobject-2.0
          sudo ln -s /opt/homebrew/opt/pango/lib/libpango-1.0.dylib /usr/local/lib/pango-1.0
          sudo ln -s /opt/homebrew/opt/harfbuzz/lib/libharfbuzz.dylib /usr/local/lib/harfbuzz
          sudo ln -s /opt/homebrew/opt/fontconfig/lib/libfontconfig.1.dylib /usr/local/lib/fontconfig-1
          sudo ln -s /opt/homebrew/opt/pango/lib/libpangoft2-1.0.dylib /usr/local/lib/pangoft2-1.0

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Test CLI functionality
        run: |
          python -m src.main --exam saa-c03 --begin 1 --end 2

      - name: Verify merged PDF creation
        run: |
          if [ -f "output/saa-c03_questions1-2_merged.pdf" ]; then
            echo "Merged PDF file created successfully"
          else
            echo "Merged PDF file not found"
            echo "Files in output directory:"
            ls -la output/
            exit 1
          fi
